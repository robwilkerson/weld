name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.21']
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    # Linux specific setup
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev
        # Create symlink for webkit2gtk-4.0 pointing to 4.1
        sudo ln -s /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.1.pc /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.0.pc || true
    
    # Install Wails
    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.1
    
    # Verify Wails installation
    - name: Wails Doctor
      run: wails doctor
    
    # Frontend dependencies
    - name: Install frontend dependencies
      working-directory: frontend
      run: bun install
    
    # Build frontend (required for go:embed)
    # The main.go file uses //go:embed all:frontend/dist to embed the frontend
    # assets into the binary. This requires the dist directory to exist at
    # compile time, so we must build the frontend before running Go tests.
    - name: Build frontend
      working-directory: frontend
      run: bun run build
    
    # Backend tests
    - name: Run backend tests
      run: go test ./... -v -cover
    
    # Frontend tests
    - name: Run frontend tests
      working-directory: frontend
      run: bun run test:coverage
    
    # Install Playwright browsers for E2E tests
    - name: Install Playwright browsers
      working-directory: frontend
      run: bunx playwright install --with-deps chromium
    
    # Start Wails dev server in background for E2E tests
    - name: Start Wails dev server
      run: |
        wails dev > wails.log 2>&1 &
        echo $! > wails.pid
        # Wait for dev server to be ready
        timeout=60
        while ! curl -s http://localhost:34115 > /dev/null && [ $timeout -gt 0 ]; do
          sleep 1
          timeout=$((timeout - 1))
        done
        if [ $timeout -eq 0 ]; then
          echo "Wails dev server failed to start"
          cat wails.log
          exit 1
        fi
        echo "Wails dev server is ready"
    
    # Run E2E tests
    - name: Run E2E tests
      working-directory: frontend
      run: bun run test:e2e
      env:
        CI: true
    
    # Stop Wails dev server
    - name: Stop Wails dev server
      if: always()
      run: |
        if [ -f wails.pid ]; then
          kill $(cat wails.pid) || true
          rm wails.pid
        fi
    
    # Upload E2E test results on failure
    - name: Upload E2E test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results-${{ matrix.os }}
        path: |
          frontend/tests/e2e/test-results/
          frontend/tests/e2e/playwright-report/
        retention-days: 7
    
    # Build the application
    - name: Build application
      run: wails build
    
    # Ad-hoc sign macOS app to prevent "damaged app" error
    - name: Ad-hoc Sign macOS App
      if: matrix.os == 'macos-latest'
      run: |
        echo "Cleaning extended attributes from Weld.app..."
        xattr -cr build/bin/Weld.app
        echo "Ad-hoc signing Weld.app..."
        codesign --force --deep --sign - build/bin/Weld.app
        echo "Verifying signature..."
        codesign --verify --verbose build/bin/Weld.app
      shell: bash
    
    # Upload artifacts (optional - for debugging)
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: weld-${{ matrix.os }}
        path: |
          build/bin/*
        retention-days: 7